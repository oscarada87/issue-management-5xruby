# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: RSpec

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      ssh_private_key:
        required: true

jobs:
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_USER: oscar
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1

    - name: Run SSH Agent
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.ssh_private_key }}

    - name: Check for cache
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        upload-chunk-size: 3000000
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --with=test

    - name: Setup Database
      run: |
        bundle exec rake db:create
        bundle exec rake db:schema:load
      env:
        RAILS_ENV: test
        DATABASE_DBNAME:
        DATABASE_PORT: 5432
        DATABASE_DBTEST: test
        DATABASE_USERNAME: oscar
        DATABASE_PASSWORD: test

    - name: Run tests
      env:
        RAILS_ENV: test
        DATABASE_DBTEST: test
        DATABASE_USERNAME: oscar
        DATABASE_PASSWORD: test
      run: >-
        bundle exec rspec
